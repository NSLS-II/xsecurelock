# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
    - releases/*
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest'

strategy:
  matrix:
    debian8:
      containerImage: stuwilkins/xsecurelock-build-deb8:latest
      debrelease: debian8
      pkg_type: debian
    debian9:
      containerImage: stuwilkins/xsecurelock-build-deb9:latest
      debrelease: debian9
      pkg_type: debian
    debian10:
      containerImage: stuwilkins/xsecurelock-build-deb9:latest
      debrelease: debian10
      pkg_type: debian
    ubuntu-groovy:
      containerImage: stuwilkins/xsecurelock-build-ubuntu:latest
      debrelease: ubuntu-groovy
      pkg_type: debian
    centos8:
      containerImage: stuwilkins/xsecurelock-build-centos8:latest
      pkg_type: redhat
      rpmrelease: centos8

container: $[ variables['containerImage'] ]

steps:
- script: |
    set -e -x
    ./autogen.sh
    ./configure \
      --with-pam \
      --with-pam-service-name=xsecurelock \
      --with-userfile-filename=/etc/xsecurelock/users \
      --with-banner-filename=/etc/xsecurelock/banner \
      --enable-any-user-auth \
      --enable-banner \
      --enable-wallpaper \
      --enable-no-blank \
      --without-htpasswd \
      --with-fontconfig \
      --with-mplayer=/usr/bin/mplayer \
      --with-mpv=/usr/bin/mpv \
      --with-pamtester=no \
      --with-xcomposite \
      --with-xf86misc=no \
      --with-xrandr \
      --with-xss \
      --with-xsync \
      --with-xfixes \
      --with-xft \
      --with-xkb
  displayName: Run Configure

- script: |
    set -e
    make
  displayName: Build

- script: |
    GITDESC=`git describe`
    echo "##vso[task.setvariable variable=gitdesc]$GITDESC"
  displayName: Set Git Describe to Variable

- script: |
    set -e
    mkdir -p build
    gbp buildpackage \
      --git-ignore-new \
      --git-ignore-branch \
      -uc -us \
      --git-export-dir=build \
      --git-tarball-dir=build
    old_debfile=$(ls build/xsecurelock-nsls2_*.deb | head -1)
    new_debfile=$(echo ${old_debfile} | sed "s/\.deb/-$(debrelease).deb/")
    mv "${old_debfile}" "${new_debfile}"
    echo "##vso[task.setvariable variable=releasefile]${new_debfile}"
    echo "##[debug] old_debfile = ${old_debfile}"
    echo "##[debug] new_debfile = ${new_debfile}"
  displayName: 'Build Debian Package'
  condition: eq(variables.pkg_type, 'debian')

- script: |
    set -e -x
    rpmbuild -bb --define 'version 1.7.5' xsecurelock-nsls2.spec
  displayName: 'Build rpm Package'
  condition: eq(variables.pkg_type, 'redhat')

- script: |
    echo "##[debug] releasefile = $(releasefile)"
    echo "##[debug] gitdesc = $(gitdesc)"
  displayName: 'Debian Debug Output'

- task: GithubRelease@0
  inputs:
    gitHubConnection: github.com_stuwilkins
    repositoryName: NSLS-II/xsecurelock
    assets: $(releasefile)
    action: edit
    target: '$(Build.SourceVersion)'
    tag: $(gitdesc)
    addChangeLog: false
    assetUploadMode: replace
  displayName: 'Attach package to release'
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
